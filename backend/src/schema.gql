# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """ログインしているユーザーの情報"""
  authenticatedUser: User!
}

input CreateUserInput {
  """確認用パスワード"""
  confirmationPassword: String!

  """メールアドレス"""
  email: String!

  """パスワード（8~64文字）"""
  password: String!

  """ユーザーに付与する権限のdisplayedId"""
  roleDisplayedId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LogInInput {
  """登録したメールアドレス"""
  email: String!

  """登録したパスワード"""
  password: String!
}

type Mutation {
  "\n      権限: ADMIN \n\n      ユーザーを作成するオペレーション\n    "
  createUser(data: CreateUserInput!): User!

  "\n      権限: ALL \n\n      ログイン用オペレーション\n    "
  logIn(data: LogInInput!): Auth!

  "\n      権限: ログイン \n\n      ログアウト用オペレーション\n    "
  logOut: String!

  "\n      権限: ALL \n\n      トークン更新用オペレーション\n    "
  refreshTokens(data: RefreshTokensInput!): TokenAuth!

  "\n      権限: ALL \n\n      ログイン用オペレーション\n    "
  tokenLogIn(data: TokenLogInInput!): TokenAuth!

  "\n      権限: ALL \n\n      ログアウト用オペレーション\n    "
  tokenLogOut(data: TokenLogOutInput!): String

  "\n      権限: ログイン \n\n      ユーザーのメールアドレスを更新するオペレーション\n    "
  updateUserEmail(data: UpdateUserEmailInput!): User!

  "\n      権限: ADMIN \n\n      ユーザーの権限を更新するオペレーション \n\n      自分自身の権限は更新できない\n    "
  updateUserRole(data: UpdateUserRoleInput!): User!
}

type PageInfo {
  """最後に取得したデータのカーソル"""
  endCursor: String

  """次のページの可否"""
  hasNextPage: Boolean

  """前のページの可否"""
  hasPreviousPage: Boolean

  """最初に取得したデータのカーソル"""
  startCursor: String
}

input PaginationInput {
  """起点となるカーソル(カーソル以降の値取得時)"""
  after: String

  """起点となるカーソル(カーソル以前の値取得時)"""
  before: String

  """値の取得数(カーソル以降の値取得時)"""
  first: Int

  """値の取得数(カーソル以前の値取得時)"""
  last: Int

  """カーソルを含めた取得する値のスキップ数"""
  skip: Int
}

type Query {
  "\n      権限: ログイン \n\n      ログイン中のユーザー情報を取得するオペレーション\n    "
  getAuthenticatedUser: Auth!

  "\n      権限: ADMIN \n\n      ページネーションによりユーザーを取得するオペレーション \n\n    "
  getUserConnection(pagination: PaginationInput = {first: 1, skip: 1}, sort: UserSortInput = {direction: ASC, field: ID}): UserConnection!
}

input RefreshTokensInput {
  """リフレッシュトークン"""
  refreshToken: String!
}

type Role {
  """DBへのデータ作成時間"""
  createdAt: DateTime!

  """クライアントアプリケーション側へ表示するID"""
  displayedId: String!

  """ロールの名前"""
  name: String!

  """DBへのデータ更新時間"""
  updatedAt: DateTime!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum SortDirection {
  ASC
  DESC
}

type TokenAuth {
  """アクセストークン"""
  accessToken: String!

  """リフレッシュトークン"""
  refreshToken: String!
}

input TokenLogInInput {
  """登録したメールアドレス"""
  email: String!

  """登録したパスワード"""
  password: String!
}

input TokenLogOutInput {
  """リフレッシュトークン"""
  refreshToken: String!
}

input UpdateUserEmailInput {
  """新しいメールアドレス"""
  newEmail: String!
}

input UpdateUserRoleInput {
  """更新対象ユーザーの新しい権限のdisplaydId"""
  newRoleDisplayedId: String!

  """更新対象ユーザーのdisplayedId"""
  updateTargetUserDisplayedId: String!
}

type User {
  """DBへのデータ作成時間"""
  createdAt: DateTime!

  """クライアントアプリケーション側へ表示するID"""
  displayedId: String!

  """DBへのデータ更新時間"""
  updatedAt: DateTime!

  """ユーザー認証情報"""
  userCredential: UserCredential!

  """ユーザー権限"""
  userRole: Role!
}

type UserConnection {
  """edgeオブジェクト配列"""
  edges: [UserEdge!]

  """ページネーションに関する情報"""
  pageInfo: PageInfo!

  """指定した条件で取得できる最大データ数"""
  totalCount: Int!
}

type UserCredential {
  """DBへのデータ作成時間"""
  createdAt: DateTime!

  """メールアドレス"""
  email: String!

  """DBへのデータ更新時間"""
  updatedAt: DateTime!
}

type UserEdge {
  """現在のnodeのカーソル"""
  cursor: String!

  """nodeオブジェクト"""
  node: User!
}

"""Properties by which user connections can be ordered."""
enum UserSortField {
  CREATED_AT
  ID
}

input UserSortInput {
  """ソートする方向"""
  direction: SortDirection = ASC

  """ユーザー取得する際にソート対象にしたいフィールド"""
  field: UserSortField = ID
}