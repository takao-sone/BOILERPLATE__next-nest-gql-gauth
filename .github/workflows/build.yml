name: Build and Push image for AppRunner to ECR

on:
  workflow_dispatch:
  push:
    branches:
      # TODO
      # - develop
      - feature/issue-29-63

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build & Push images for AppRunner & Migration & Seed
    environment: staging # TODO
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Configure AWS credentials
        if: github.ref_name != 'main'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.PROJECT_NAME }}-${{ vars.STAGE }}-gha-push-image-role
          aws-region: ${{ secrets.AWS_REGION }}
      -
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      -
        name: Build & Push application image
        if: github.ref_name != 'main'
        uses: docker/build-push-action@v4
        with:
          push: true
          provenance: false
          context: ./backend
          file: ./backend/Dockerfile.aws.app
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.PROJECT_NAME }}-${{ vars.STAGE }}-backend:app
          build-args: PORT=${{ secrets.BACKEND_APP_PORT }}
      -
        name: Build & Push migration image
        if: github.ref_name != 'main'
        uses: docker/build-push-action@v4
        with:
          push: true
          provenance: false
          context: ./backend
          file: ./backend/Dockerfile.aws.prisma
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.PROJECT_NAME }}-${{ vars.STAGE }}-backend:prisma-migration
          target: migration
      -
        name: Build and push staring prisma seed image
        if: github.ref_name != 'main'
        uses: docker/build-push-action@v4
        with:
          push: true
          provenance: false
          context: ./backend
          file: ./backend/Dockerfile.aws.prisma
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.PROJECT_NAME }}-${{ vars.STAGE }}-backend:prisma-seed
          target: seed
  cleanup:
    name: Delete actions caches
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out code
        uses: actions/checkout@v3

      -
        name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache

          REPO=${{ github.repository }}
          BRANCH="refs/pull/${{ github.event.pull_request.number }}/merge"

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# vars
# STAGE

# secrets
# PROJECT_NAME
# BACKEND_APP_PORT
# AWS_ACCOUNT_ID
# AWS_REGION
